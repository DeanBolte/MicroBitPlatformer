from microbit import *
import music

x = 2
y = 4
z = 0
objectYMax = 4
TERRAIN = [4,4,4,4,4,3,3,3,3,2,2,3,3,3,1,1,1,3,3,4,4,4,4,4,-1,4,4,4,4]
DEATH = [Image('99999:''99999:''99999:''99999:''99999:'),Image('00000:''09990:''09990:''09990:''00000:'),Image('00000:''00000:''00900:''00000:''00000:')]
playState = 'ground'
display.scroll('MARGIO')
gameState = 'idle'
count = 0
zFrame = 4

#player
def falling():
    y += 1
    playState = 'ground'

def jump(jumpHeight):
    if(jumpHeight > 2):
        y -= 1
        jumpHeight -= 1
    elif(height > 0):
        jumpHeight -= 1
    else:
        playState = 'ground'

#game states
def gameStart():
    x = 2
    y = 4
    gameState = 'idle'

def gameRestart():
    gameStart()

def gameWin():
    display.scroll('YOU WON!')
    gameRestart()

def gameLose():
    display.scroll('GAME OVER!')
    gameRestart()

#frame states
def frameEnd():
    sleep(100)

#main runtime environment
gameStart()

while True:
    display.clear()

    if(gameState == 'play'):
        #win requirement (placed in the Terrain array)
        if(TERRAIN[z] == -1):
            gameState = 'win'

        #
        if(z+4 < len(TERRAIN)):
            for i in range(0,5,1):
                for j in range(0,5,1):
                    if(TERRAIN[z+i] == -1):
                        display.set_pixel(i,j,2)
                    elif(TERRAIN[z+i] < j):
                        display.set_pixel(i,j,8)

        #jump when on ground
        if(playState == 'ground'):
            if(button_a.is_pressed()):
                jump(5)
                music.play(music.JUMP_UP, wait = False)

        #player is being affected by gravity
        if(y < TERRAIN[z] and playState == 'ground'):
            falling()

        #if colliding with a wall
        if(y > TERRAIN[z] and TERRAIN[z] != -1):
            gameLose()

        #transition from play to idle
        if(playState == 'ground' and button_b.is_pressed()):
            gameState = 'idle_trans'
            count = 0

        if(zFrame == 0 and z < len(TERRAIN) - 1):
            z += 1
            zFrame = 4
        else:
            zFrame -= 1

    if(gameState == 'over'):
        music.play(music.DADADADUM, wait = False)
        for i in range(0,3,1):
            display.show(DEATH[i])
            sleep(50)
        gameLose()

    #game transitions
    if(gameState == 'play_trans' and playState == 'ground'):
        while(count >= 0):
            display.clear()
            display.set_pixel(count,y,6)
            count -= 1
            sleep(100)
        z = 0
        x = 0
        gameState = 'play'

    if(gameState == 'idle_trans' and playState == 'ground'):
        while(count <= 2):
            display.clear()
            display.set_pixel(count,y,6)
            count += 1
            sleep(100)
        x = 2
        gameState = 'idle'

    if(gameState == 'idle'):
        if(button_b.is_pressed()):
            gameState = 'play_trans'
            count = 2

    #
    if(accelerometer.was_gesture('shake')):
        gameRestart()

    if(gameState == 'win'):
        gameWin()

    #if player is within screen bounds, draw player
    if(y >= 0):
        display.set_pixel(x,y,6)

    frameEnd()
